// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "API for Calendar demo project",
    "title": "Calendar API",
    "version": "1.0.0"
  },
  "paths": {
    "/user": {
      "get": {
        "description": "Вернуть список имен и фамилий пользователей (требует авторизацию)",
        "tags": [
          "user"
        ],
        "summary": "Получение списка всех пользователей",
        "responses": {
          "200": {
            "description": "Список пользователей (в идеале бы прикрутить поиск по имени и фамилии, но для простоты оставлю так)",
            "schema": {
              "$ref": "#/definitions/GetUsersResponse"
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          }
        }
      },
      "post": {
        "description": "Доступно без аутентификации, может вызываться при регистрации нового пользователя",
        "tags": [
          "user"
        ],
        "summary": "Создание пользователя",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "400": {
            "description": "Не удалось выполнить запрос (пользователь уже существует)",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Вход в систему",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Вход выполнен успешно",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateUserRequest": {
      "type": "object",
      "required": [
        "login",
        "name",
        "surname",
        "password"
      ],
      "properties": {
        "login": {
          "$ref": "#/definitions/Login"
        },
        "name": {
          "description": "Имя пользователя",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "$ref": "#/definitions/Password"
        },
        "surname": {
          "description": "Фамилия пользователя",
          "type": "string",
          "minLength": 1
        }
      },
      "additionalProperties": false
    },
    "CreateUserResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "Идентификатор созданного пользователя",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "Dummy": {
      "type": "object"
    },
    "GetUsersResponse": {
      "type": "object",
      "required": [
        "users"
      ],
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "surname": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Login": {
      "description": "Логин для входа в систему",
      "type": "string",
      "maxLength": 32,
      "minLength": 1
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "login",
        "password"
      ],
      "properties": {
        "login": {
          "$ref": "#/definitions/Login"
        },
        "password": {
          "$ref": "#/definitions/Password"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        }
      }
    },
    "Password": {
      "description": "Пароль",
      "type": "string",
      "maxLength": 32,
      "minLength": 8
    }
  },
  "tags": [
    {
      "description": "Пользователь календаря",
      "name": "user"
    },
    {
      "description": "Встреча",
      "name": "meeting"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "API for Calendar demo project",
    "title": "Calendar API",
    "version": "1.0.0"
  },
  "paths": {
    "/user": {
      "get": {
        "description": "Вернуть список имен и фамилий пользователей (требует авторизацию)",
        "tags": [
          "user"
        ],
        "summary": "Получение списка всех пользователей",
        "responses": {
          "200": {
            "description": "Список пользователей (в идеале бы прикрутить поиск по имени и фамилии, но для простоты оставлю так)",
            "schema": {
              "$ref": "#/definitions/GetUsersResponse"
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          }
        }
      },
      "post": {
        "description": "Доступно без аутентификации, может вызываться при регистрации нового пользователя",
        "tags": [
          "user"
        ],
        "summary": "Создание пользователя",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CreateUserRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CreateUserResponse"
            }
          },
          "400": {
            "description": "Не удалось выполнить запрос (пользователь уже существует)",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Вход в систему",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Вход выполнен успешно",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "403": {
            "description": "Доступ запрещен",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          },
          "500": {
            "description": "Ошибка на стороне сервера",
            "schema": {
              "$ref": "#/definitions/Dummy"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateUserRequest": {
      "type": "object",
      "required": [
        "login",
        "name",
        "surname",
        "password"
      ],
      "properties": {
        "login": {
          "$ref": "#/definitions/Login"
        },
        "name": {
          "description": "Имя пользователя",
          "type": "string",
          "minLength": 1
        },
        "password": {
          "$ref": "#/definitions/Password"
        },
        "surname": {
          "description": "Фамилия пользователя",
          "type": "string",
          "minLength": 1
        }
      },
      "additionalProperties": false
    },
    "CreateUserResponse": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "Идентификатор созданного пользователя",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "Dummy": {
      "type": "object"
    },
    "GetUsersResponse": {
      "type": "object",
      "required": [
        "users"
      ],
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetUsersResponseUsersItems0"
          }
        }
      }
    },
    "GetUsersResponseUsersItems0": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        }
      }
    },
    "Login": {
      "description": "Логин для входа в систему",
      "type": "string",
      "maxLength": 32,
      "minLength": 1
    },
    "LoginRequest": {
      "type": "object",
      "required": [
        "login",
        "password"
      ],
      "properties": {
        "login": {
          "$ref": "#/definitions/Login"
        },
        "password": {
          "$ref": "#/definitions/Password"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        }
      }
    },
    "Password": {
      "description": "Пароль",
      "type": "string",
      "maxLength": 32,
      "minLength": 8
    }
  },
  "tags": [
    {
      "description": "Пользователь календаря",
      "name": "user"
    },
    {
      "description": "Встреча",
      "name": "meeting"
    }
  ]
}`))
}
